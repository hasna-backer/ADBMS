							Experiment No: 18
						     NoSQL- CRUD operations
-------------------------------------------------------------------------------------------------------------------------------------------

1.Write a MongoDB query to create an INVOICE database and collections (CUSTOMER, PRODUCT) and its corresponding documents.


> use INVOICE
switched to db INVOICE


> db.CUSTOMER.insert({"Name":"Peter","City":"Canada","PhNo":"7558042845","Age":25})
WriteResult({ "nInserted" : 1 })
> db.CUSTOMER.insert({"Name":"Cris","City":"UK","PhNo":"9458042845","Age":28})
WriteResult({ "nInserted" : 1 })
> db.CUSTOMER.insert({"Name":"Evan","City":"London","PhNo":"9458472845","Age":30})
WriteResult({ "nInserted" : 1 })
> db.CUSTOMER.insert({"Name":"Tony","City":"Canada","PhNo":"7558042864","Age":25})
WriteResult({ "nInserted" : 1 })
> db.CUSTOMER.insert({"Name":"Pepper Pots","City":"USA","PhNo":"9497472845","Age":30})
WriteResult({ "nInserted" : 1 })


> db.PRODUCT.insertMany([{"pname":"Pen","price":"10"}, {"pname":"Book","price":"40"}, {"pname":"Box","price":"50"}, {"pname":"Scale","price":"10"}])
{
	"acknowledged" : true,
	"insertedIds" : [
		ObjectId("62a81840a268c49a134a33fb"),
		ObjectId("62a81840a268c49a134a33fc"),
		ObjectId("62a81840a268c49a134a33fd"),
		ObjectId("62a81840a268c49a134a33fe")
	]
}
> 

--------------------------------------------------------------------------------------------------------------------------------------------------


2.Write a MongoDB query to find all documents from the collection CUSTOMER 

> db.CUSTOMER.find().pretty()
{
	"_id" : ObjectId("62a81568a268c49a134a33f7"),
	"Name" : "Peter",
	"City" : "Canada",
	"PhNo" : "7558042845",
	"Age" : 25
}
{
	"_id" : ObjectId("62a81592a268c49a134a33f8"),
	"Name" : "Cris",
	"City" : "UK",
	"PhNo" : "9458042845",
	"Age" : 28
}
{
	"_id" : ObjectId("62a815afa268c49a134a33f9"),
	"Name" : "Evan",
	"City" : "London",
	"PhNo" : "9458472845",
	"Age" : 30
}
{
	"_id" : ObjectId("62a81b36a268c49a134a33ff"),
	"Name" : "Tony",
	"City" : "Canada",
	"PhNo" : "7558042864",
	"Age" : 25
}
{
	"_id" : ObjectId("62a81ba3a268c49a134a3400"),
	"Name" : "Pepper Pots",
	"City" : "USA",
	"PhNo" : "9497472845",
	"Age" : 30
}

----------------------------------------------------------------------------------------------------------------------------------------------------


3.Write a MongoDB query to update the city in the collection CUSTOMER.


> db.CUSTOMER.update({"City":"USA"},{$set:{"City":"calicut"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })




> db.CUSTOMER.findOne({"City":"calicut"})
{
	"_id" : ObjectId("62a81ba3a268c49a134a3400"),
	"Name" : "Pepper Pots",
	"City" : "calicut",
	"PhNo" : "9497472845",
	"Age" : 30
}



-----------------------------------------------------------------------------------------------------------------------------------------

4.Write a MongoDB query to delete the first matched document whose city is “Calicut”.


> db.CUSTOMER.deleteOne({City:"calicut"})
{ "acknowledged" : true, "deletedCount" : 1 }

> db.CUSTOMER.find()
{ "_id" : ObjectId("62a81568a268c49a134a33f7"), "Name" : "Peter", "City" : "Canada", "PhNo" : "7558042845", "Age" : 25 }
{ "_id" : ObjectId("62a81592a268c49a134a33f8"), "Name" : "Cris", "City" : "UK", "PhNo" : "9458042845", "Age" : 28 }
{ "_id" : ObjectId("62a815afa268c49a134a33f9"), "Name" : "Evan", "City" : "London", "PhNo" : "9458472845", "Age" : 30 }
{ "_id" : ObjectId("62a81b36a268c49a134a33ff"), "Name" : "Tony", "City" : "Canada", "PhNo" : "7558042864", "Age" : 25 }



